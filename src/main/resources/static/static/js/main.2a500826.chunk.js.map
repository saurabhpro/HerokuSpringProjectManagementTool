{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/project/ProjectItem.js","components/project/CreateProjectButton.js","components/Dashboard.js","security-untils/SetJWTToken.js","actions/securityActions.js","components/layout/Header.js","components/project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store/store.js","components/project/UpdateProject.js","components/not-found/NotFoundPage.js","components/project-board/project-task/ProjectTask.js","actions/backlogActions.js","components/project-board/Backlog.js","components/project-board/ProjectBoard.js","components/project-board/project-task/AddProjectTask.js","components/project-board/project-task/UpdateProjectTask.js","components/layout/Landing.js","components/user-management/Login.js","components/user-management/Register.js","security-untils/SecuredRoute.js","App.js","serviceWorker.js","index.js","assets/images/PageNotFound.png"],"names":["createProject","project","history","dispatch","a","axios","post","serverResponse","console","debug","push","type","payload","error","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","log","Container","className","Row","projectIdentifier","projectName","description","Card","ButtonGroup","vertical","to","Button","variant","block","icon","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","fluid","map","proj","key","state","get","SetJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","HeaderLink","security","validToken","user","userIsAuthenticated","Navbar","Collapse","Nav","Link","Form","inline","FormControl","placeholder","Text","fullName","userIsNotAuthenticated","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","AddProject","onChange","event","setState","target","name","value","onSubmit","preventDefault","newProject","startDate","endDate","errors","Group","controlId","Label","Control","as","required","classnames","Feedback","getDerivedStateFromProps","nextProps","initialState","projectTasks","projectTask","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","appStore","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","UpdateProject","match","params","getProject","disabled","NotFoundPage","src","PageNotFound","alt","style","textAlign","ProjectTask","getPriorityColorAndStringValue","priorityAsString","priorityColorClass","priority","backlogId","projectTaskId","deleteProjectTask","createdAt","moment","format","text","Body","Title","summary","acceptanceCriteria","Backlog","distributeToCardDecks","projectTasksProp","tasks","toDoItems","inProgressItems","doneItems","forEach","task","status","CardDeck","md","offset","ProjectBoard","getBacklog","boardContent","boardAlgorithm","size","length","projectNotFound","role","AddProjectTask","newProjectTask","dueDate","addProjectTask","custom","UpdateProjectTask","getProjectTask","e","updatedProjectTask","updateProjectTask","patch","Landing","Login","componentWillReceiveProps","loginUser","username","password","authenticateUser","FormGroup","setItem","decoded","jwt_decode","Register","newUser","confirmPassword","createNewUser","component","otherProps","render","library","add","faCheckSquare","faCoffee","faEdit","faMinusSquare","faPlusSquare","faBackward","faTasks","faUserCircle","faProjectDiagram","jwtToken","decoded_jwtToken","store","currentTime","unix","exp","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.2a500826.chunk.js","sourcesContent":["import axios from \"axios\";\n\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\n//const baseURL = \"http://localhost:8080\";\n\n/**\n * history -> helps redirect once form is submitted\n * aysnc returns a promise, await waits for the promis to get done\n * thunk allows us to have a function returns dispatch function\n * */\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    const serverResponse = await axios.post(\"/api/projects\", project);\n    console.debug(serverResponse);\n\n    //redirect to this route with props set (visible in redux debug tool)\n    history.push(\"/dashboard\");\n\n    //clear out any previous errors from state\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (error) {\n    console.error(error);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const getProjects = () => async (dispatch) => {\n  const serverResponse = await axios.get(\"/api/projects\");\n  console.debug(serverResponse);\n\n  dispatch({\n    type: GET_PROJECTS,\n    payload: serverResponse.data,\n  });\n};\n\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const serverResponse = await axios.get(`/api/projects/${id}`);\n    console.debug(serverResponse);\n\n    dispatch({\n      type: GET_PROJECT,\n      payload: serverResponse.data,\n    });\n  } catch (error) {\n    history.push(\"/error\");\n  }\n};\n\nexport const deleteProject = (id, history) => async (dispatch) => {\n  if (window.confirm(\"Are you sure you want to delete?\")) {\n    await axios.delete(`/api/projects/${id}`);\n\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n","// type of action we want to perform\n\n// reducer action - first reducer\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n// backlog\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\n//user security\nexport const SET_CURRENT_USER  = \"SET_CURRENT_USER\";","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\n\n// get our fontawesome imports\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { Link } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\n\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    console.log(this.props);\n    return (\n      <Container className=\"bg-light mb-3\">\n        <Row>\n          <div className=\"col-2\">\n            <span className=\"mx-auto\">{project.projectIdentifier}</span>\n          </div>\n\n          <div className=\"col-lg-6 col-md-4 col-8\">\n            <h3>{project.projectName}</h3>\n            <p>{project.description}</p>\n          </div>\n\n          <Card>\n            <ButtonGroup vertical>\n              <Link\n                to={`/projectBoard/${project.projectIdentifier}`}\n                className=\"btn-block\"\n              >\n                <Button variant=\"outline-primary\" block className=\"mb-1\">\n                  <div className=\"float-left\">\n                    <FontAwesomeIcon icon=\"tasks\" /> Project Board\n                  </div>\n                </Button>\n              </Link>\n              <Link to={`/updateProject/${project.projectIdentifier}`}>\n                <Button variant=\"outline-info\" block className=\"mb-1\">\n                  <div className=\"float-left\">\n                    <FontAwesomeIcon icon=\"edit\" /> Update Project Info\n                  </div>\n                </Button>\n              </Link>\n              <Button\n                variant=\"outline-danger\"\n                block\n                onClick={this.onDeleteClick.bind(\n                  this,\n                  project.projectIdentifier\n                )}\n              >\n                <div className=\"float-left\">\n                  <FontAwesomeIcon icon=\"minus-square\" /> Delete Project\n                </div>\n              </Button>\n            </ButtonGroup>\n          </Card>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\">\n        <Button className=\"btn btn-lg btn-info\">\n          <FontAwesomeIcon icon=\"plus-square\" /> Create a Project\n        </Button>\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./project/ProjectItem\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport CreateProjectButton from \"./project/CreateProjectButton\";\n\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  // Life Cycle Hooks\n  // https://reactjs.org/docs/react-component.html#componentdidmount\n  // is invoked immediately after a component is mounted (inserted into the tree).\n  // Initialization that requires DOM nodes should go here.\n  // If you need to load data from a remote endpoint, this is a good place to instantiate the network request.\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    // const projectList = this.props.project.projects;\n    const { projects } = this.props.project; // destructuring requires exact matchinh property\n\n    return (\n      <Container fluid className=\"p-2 flex-fill justify-content-center\">\n        <Row className=\"justify-content-md-center\">\n          <h1 className=\"display-4\">Projects</h1>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <CreateProjectButton />\n        </Row>\n        <hr />\n        <Row>\n          {\n            //this prop name is same as the child extracted name\n            projects.map((proj) => (\n              <ProjectItem key={proj.id} project={proj} />\n            ))\n          }\n        </Row>\n      </Container>\n    );\n  }\n}\n\n// typescript type validation\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import axios from \"axios\";\n\n/**\n *\n * @param {token} token to be appended to any request that requires it\n */\nconst SetJWTToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default SetJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport SetJWTToken from \"../security-untils/SetJWTToken\";\n\nimport jwt_decode from \"jwt-decode\";\n\n//const baseURL = \"http://localhost:8080\";\n\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  try {\n    const serverResponse = await axios.post(\"/api/users/register\", newUser);\n    console.log(serverResponse);\n\n    // redirect to login after successful creation of user\n    history.push(\"/login\");\n\n    // clear out errors form previous calls\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const authenticateUser = (loginUser, history) => async (dispatch) => {\n  try {\n    // post Login request\n    const serverResponse = await axios.post(\"/api/users/login\", loginUser);\n    console.log(serverResponse);\n\n    // extract the token from response data\n    const { token } = serverResponse.data;\n\n    //store the token in localStorage\n    localStorage.setItem(\"jwtToken\", token);\n\n    // set our token in header ***\n    SetJWTToken(token);\n\n    //decode token on react\n    const decoded = jwt_decode(token);\n\n    //dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  console.log(\"logging out now\");\n\n  //remove from local storage of browser\n  localStorage.removeItem(\"jwtToken\");\n\n  //get rid of the token\n  SetJWTToken(false);\n\n  // dont send any payload user\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {},\n  });\n};\n","import React, { Component } from \"react\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\n// get our fontawesome imports\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Header extends Component {\n  logout = () => {\n    this.props.logout();\n    window.location.href = \"/\";\n  };\n\n  render() {\n    // get important info from security (token) user\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/dashboard\" className=\"text-light\">\n            Dashboard\n          </Nav.Link>\n        </Nav>\n\n        <Nav>\n          <Form inline>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Search Project\"\n              className=\"mr-sm-1 justify-content-end\"\n            />\n            <Button variant=\"outline-light mr-2\"> Search </Button>\n          </Form>\n        </Nav>\n\n        <Nav>\n          {\" \"}\n          <Navbar.Text className=\"text-light\">\n            <FontAwesomeIcon icon=\"user-circle\" /> {user.fullName}\n          </Navbar.Text>\n          <Nav.Link onClick={this.logout.bind(this)} className=\"text-light\">\n            Logout\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    );\n\n    const userIsNotAuthenticated = (\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <Nav.Link href=\"/register\" className=\"text-light\">\n            Sign Up\n          </Nav.Link>\n          <Nav.Link href=\"/login\" className=\"text-light\">\n            Login\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    );\n\n    let HeaderLink;\n\n    if (user && validToken) {\n      HeaderLink = userIsAuthenticated;\n    } else {\n      HeaderLink = userIsNotAuthenticated;\n    }\n\n    return (\n      <>\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\n          <Navbar.Brand href=\"/\">\n            <FontAwesomeIcon icon=\"project-diagram\" /> First React Task Manager\n          </Navbar.Brand>\n\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\n          {HeaderLink}\n        </Navbar>\n      </>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\n\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      // add errors to extract on form\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // Life Cycle Hooks\n  // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\n  // https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html (migration)\n\n  static getDerivedStateFromProps = (nextProps, state) => {\n    if (nextProps.errors) {\n      state.errors = nextProps.errors;\n    }\n\n    return state;\n  };\n\n  onChange = (event) => {\n    // this meants get the target name property and set it to the value property\n    // then setState\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  onSubmit = (event) => {\n    // prevents screen refresh once this event ends\n    event.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n    };\n\n    this.props.createProject(newProject, this.props.history);\n\n    //log for test\n    console.log(newProject);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <Container fluid className=\"p-2 flex-fill justify-content-center\">\n        <div className=\"col-md-8 m-auto\">\n          <h5 className=\"display-4 \">Create Project form</h5>\n          <hr />\n\n          {\n            // for with onSubmit Action - this.onSubmit can have any arbitary name too like onSave etc\n          }\n          <Form onSubmit={this.onSubmit} className=\"d-flex-fill p-1 text-left\">\n            <Form.Group controlId=\"formProjectName\">\n              <Form.Label>Project Name</Form.Label>\n              <Form.Control\n                as=\"input\"\n                required\n                placeholder=\"Project Name\"\n                name=\"projectName\"\n                className={classnames({\n                  \"is-invalid\": errors.projectName,\n                })}\n                value={this.state.projectName}\n                onChange={this.onChange}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.projectName}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"formProjectIdentifier\">\n              <Form.Label>Project Unique Identifier</Form.Label>\n              <Form.Control\n                as=\"input\"\n                required\n                //disabled\n                placeholder=\"Project Unique Identifier\"\n                name=\"projectIdentifier\"\n                className={classnames({\n                  \"is-invalid\": errors.projectIdentifier,\n                })}\n                value={this.state.projectIdentifier}\n                onChange={this.onChange}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.projectIdentifier}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"formProjectDescription\">\n              <Form.Label>Project Description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                required\n                placeholder=\"Project Description\"\n                name=\"description\"\n                className={classnames({\n                  \"is-invalid\": errors.description,\n                })}\n                value={this.state.description}\n                onChange={this.onChange}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.description}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"formStartDate\">\n              <Form.Label>Start Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"startDate\"\n                value={this.state.startDate}\n                onChange={this.onChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formEndDate\">\n              <Form.Label>Estimated End Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"endDate\"\n                value={this.state.endDate}\n                onChange={this.onChange}\n              />\n            </Form.Group>\n            <Button type=\"submit\" block>\n              Submit\n            </Button>\n          </Form>\n        </div>\n      </Container>\n    );\n  }\n}\n\n/**\n * https://reactjs.org/docs/typechecking-with-proptypes.html\n * Simple means it can checl what argument type we have (since we are using js not ts it might be handy)\n * React has some built-in typechecking abilities. To run typechecking on the props for a component, you can assign the special propTypes property\n * More: https://blog.bitsrc.io/understanding-react-proptypes-type-checking-in-react-9648a62ce12e\n * PropTypes.func.isRequired = The prop must be a function and it must be provided else error will be thrown.\n */\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\n// https://blog.logrocket.com/react-redux-connect-when-and-how-to-use-it-f2a1edab2013/\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\n// function to return the payload for our action type\nexport default function (state = initialState, action) {\n  if (action.type === GET_ERRORS) {\n    return action.payload;\n  } else {\n    return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state, // spread operator\n        projects: action.payload,\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"../actions/types\";\n\nconst initialState = {\n  projectTasks: [],\n  projectTask: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        projectTasks: action.payload,\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        projectTask: action.payload,\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        projectTasks: state.projectTasks.filter(\n          (projectTask) => projectTask.projectSequence !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {},\n};\n\n/**\n *\n * @param {payload} payload which contains JWT Claims (user info)\n */\nconst booleanActionPayload = (payload) => {\n  return !!payload; //  true if has value (the !! makes sure we return boolean and not the payload content)\n};\n\nexport default function (state = initialState, action) {\n  if (action.type === SET_CURRENT_USER) {\n    return {\n      ...state,\n      validToken: booleanActionPayload(action.payload),\n      user: action.payload,\n    };\n  } else {\n    return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\n/** errorReducer is the method we created */\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet appStore;\n\n/*\n this is simply creating the store \n and additionally for Chrome if we have redux debug tool extension installed we use the compose methdo to expose the store data\n https://github.com/zalmoxisus/redux-devtools-extension\n*/\nif (window.navigator.userAgent.includes(\"Chrome\")) {\n  appStore = createStore(\n    rootReducer, // our combinedReducer\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      /* preloadedState, */ window.__REDUX_DEVTOOLS_EXTENSION__\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\n        : (f) => f\n    )\n  );\n} else {\n  appStore = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default appStore;\n","import React, { Component } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { getProject, createProject } from \"../../actions/projectActions\";\n\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\n\nclass UpdateProject extends Component {\n  // to make it controlled componenet we create a constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n\n      //error handling\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // Life Cycle Hooks\n  // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\n  // https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html (migration)\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate,\n    } = nextProps.project;\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate,\n    });\n  }\n\n  // Called immediately after a component is mounted. Setting state here will trigger re-rendering.\n  componentDidMount() {\n    // destructuring\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(event) {\n    // this meants get the target name property and set it to the value property\n    // then setState\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  onSubmit = (event) => {\n    // prevents screen refresh once this event ends\n    event.preventDefault();\n\n    const newProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n    };\n\n    this.props.createProject(newProject, this.props.history);\n\n    //log for test\n    console.log(newProject);\n  };\n\n  render() {\n    const {\n      errors,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate,\n    } = this.state;\n\n    return (\n      <Container className=\"p-2 flex-fill justify-content-center\">\n        <div className=\"col-md-8 m-auto\">\n          <h5 className=\"display-4 \">Update Project Form</h5>\n          <hr />\n\n          {\n            // for with onSubmit Action - this.onSubmit can have any arbitary name too like onSave etc\n          }\n          <Form onSubmit={this.onSubmit} className=\"d-flex-fill p-1 text-left\">\n            <Form.Group controlId=\"formProjectName\">\n              <Form.Label>Project Name</Form.Label>\n              <Form.Control\n                as=\"input\"\n                required\n                placeholder=\"Project Name\"\n                name=\"projectName\"\n                className={classnames({\n                  \"is-invalid\": errors.projectName,\n                })}\n                value={projectName}\n                onChange={this.onChange}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.projectName}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"formProjectIdentifier\">\n              <Form.Label>Project Unique Identifier</Form.Label>\n              <Form.Control\n                as=\"input\"\n                required\n                disabled\n                placeholder=\"Project Unique Identifier\"\n                name=\"projectIdentifier\"\n                value={projectIdentifier}\n                onChange={this.onChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formProjectDescription\">\n              <Form.Label>Project Description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                required\n                placeholder=\"Project Description\"\n                name=\"description\"\n                className={classnames({\n                  \"is-invalid\": errors.description,\n                })}\n                value={description}\n                onChange={this.onChange}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.description}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"formStartDate\">\n              <Form.Label>Start Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"startDate\"\n                value={startDate}\n                onChange={this.onChange}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formEndDate\">\n              <Form.Label>Estimated End Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"endDate\"\n                value={endDate}\n                onChange={this.onChange}\n              />\n            </Form.Group>\n            <Button type=\"submit\" block>\n              Update\n            </Button>\n          </Form>\n        </div>\n      </Container>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\n//https://react-redux.js.org/using-react-redux/connect-mapstate\nconst mapStateToProps = (state) => ({\n  // define the variable to be used\n  project: state.project.project,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import React, { Component } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport PageNotFound from \"../../assets/images/PageNotFound.png\";\n\nclass NotFoundPage extends Component {\n  render() {\n    return (\n      <div>\n        <img src={PageNotFound} alt=\"Page not Found\" />\n        <p style={{ textAlign: \"center\" }}>\n          <Link to=\"/\">Go to Home </Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default NotFoundPage;\n","import React, { Component } from \"react\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlogId, projectTaskId) {\n    this.props.deleteProjectTask(backlogId, projectTaskId);\n  }\n\n  render() {\n    const { projectTask } = this.props;\n    //using moment.js\n    const createdAt = moment(projectTask).format(\"MMMM Do YYYY\");\n\n    // using dynamic colorization and convert to String value\n    let {\n      priorityColorClass,\n      priorityAsString,\n    } = this.getPriorityColorAndStringValue(projectTask);\n\n    return (\n      <div className=\"row-sm-3\">\n        <Card text=\"dark\" className=\"mb-2 mh-20\">\n          <Card.Header className={`${priorityColorClass}`}>\n            ID: {projectTask.projectSequence} | Priority: {priorityAsString}\n          </Card.Header>\n          <Card.Body>\n            <Card.Title>{projectTask.summary}</Card.Title>\n            <Card.Text className=\"text-truncate\">\n              {projectTask.acceptanceCriteria}\n            </Card.Text>\n\n            <ButtonGroup>\n              {\" \"}\n              <Link\n                to={`/updateProjectTask/${projectTask.projectIdentifier}/${projectTask.projectSequence}`}\n              >\n                <Button variant=\"primary\" className=\"mr-2\">\n                  <FontAwesomeIcon icon=\"edit\" /> View / Update\n                </Button>\n              </Link>\n              <Button\n                variant=\"danger\"\n                onClick={this.onDeleteClick.bind(\n                  this,\n                  projectTask.projectIdentifier,\n                  projectTask.projectSequence\n                )}\n              >\n                <FontAwesomeIcon icon=\"minus-square\" /> Delete\n              </Button>\n            </ButtonGroup>\n          </Card.Body>\n          <Card.Text>\n            <small className=\"text-muted\">Created on {createdAt}</small>\n          </Card.Text>\n        </Card>\n      </div>\n    );\n  }\n\n  getPriorityColorAndStringValue = (projectTask) => {\n    let priorityAsString;\n    let priorityColorClass;\n    switch (projectTask.priority) {\n      case 1:\n        priorityAsString = \"HIGH\";\n        priorityColorClass = \"bg-danger text-light\";\n        break;\n      case 2:\n        priorityAsString = \"MEDIUM\";\n        priorityColorClass = \"bg-primary text-light\";\n        break;\n      case 3:\n        priorityAsString = \"LOW\";\n        priorityColorClass = \"bg-secondary text-light\";\n        break;\n      default:\n        break;\n    }\n    return { priorityColorClass, priorityAsString };\n  };\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\n\nimport {\n  GET_ERRORS,\n  GET_PROJECT_TASK,\n  GET_BACKLOG,\n  DELETE_PROJECT_TASK,\n} from \"./types\";\n\n//const baseURL = \"http://localhost:8080\";\n\nexport const addProjectTask = (backlogId, projectTask, history) => async (\n  dispatch\n) => {\n  try {\n    const serverResponse = await axios.post(\n      `/api/projects/${backlogId}/backlog`,\n      projectTask\n    );\n\n    history.push(`/projectBoard/${backlogId}`);\n    console.debug(serverResponse);\n\n    //clear out any previous errors from state\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (error) {\n    console.error(error);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\n// multiple project tasks\nexport const getBacklog = (backlogId) => async (dispatch) => {\n  try {\n    const serverResponse = await axios.get(\n      `/api/projects/${backlogId}/backlog/`\n    );\n    console.debug(serverResponse);\n\n    dispatch({\n      type: GET_BACKLOG,\n      payload: serverResponse.data,\n    });\n  } catch (error) {\n    console.error(error);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const getProjectTask = (backlogId, projectTaskId, history) => async (\n  dispatch\n) => {\n  try {\n    const serverResponse = await axios.get(\n      `/api/backlogs/${backlogId}/tasks/${projectTaskId}`\n    );\n    console.debug(serverResponse);\n\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: serverResponse.data,\n    });\n  } catch (error) {\n    console.error(error);\n    history.push(\"/error\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlogId,\n  projectTaskId,\n  projectTask,\n  history\n) => async (dispatch) => {\n  try {\n    await axios.patch(\n      `/api/backlogs/${backlogId}/tasks/${projectTaskId}`,\n      projectTask\n    );\n\n    history.push(`/projectBoard/${backlogId}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlogId, projectTaskId) => async (\n  dispatch\n) => {\n  if (\n    window.confirm(\n      `You are deleting project task ${projectTaskId}, this action cannot be undone?`\n    )\n  ) {\n    await axios.delete(`/api/backlogs/${backlogId}/tasks/${projectTaskId}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: projectTaskId,\n    });\n  }\n};\n","import React, { Component } from \"react\";\n\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\n\nimport ProjectTask from \"../project-board/project-task/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    //must have the same name as passed property in ProjectBoard\n    const { projectTasksProp } = this.props;\n\n    // group tasks into three decks\n    let { toDoItems, inProgressItems, doneItems } = this.distributeToCardDecks(\n      projectTasksProp\n    );\n\n    return (\n      <CardDeck>\n        <Card bg=\"dark\" text=\"white\" className=\"text-center p-2\">\n          <Card.Header as=\"h5\" className=\"mb-2\">\n            TO DO\n          </Card.Header>\n          {toDoItems}\n        </Card>\n\n        <Card\n          md={{ offset: 1 }}\n          bg=\"warning\"\n          text=\"light\"\n          className=\"text-center p-2\"\n        >\n          <Card.Header as=\"h5\" className=\"mb-2\">\n            In Progress\n          </Card.Header>\n          {inProgressItems}\n        </Card>\n\n        <Card bg=\"success\" text=\"light\" className=\"text-center p-2\">\n          <Card.Header as=\"h5\" className=\"mb-2\">\n            Done\n          </Card.Header>\n          {doneItems}\n        </Card>\n      </CardDeck>\n    );\n  }\n\n  distributeToCardDecks = (projectTasksProp) => {\n    // now prepare and embeddeble object\n    const tasks = projectTasksProp.map((projectTask) => (\n      <ProjectTask key={projectTask.id} projectTask={projectTask} />\n    ));\n\n    let toDoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    tasks.forEach((task) => {\n      switch (task.props.projectTask.status) {\n        case \"TO_DO\":\n          toDoItems.push(task);\n          break;\n        case \"IN_PROGRESS\":\n          inProgressItems.push(task);\n          break;\n        case \"DONE\":\n          doneItems.push(task);\n          break;\n        default:\n          console.error(\"Unknown Card Deck : \" + task.props.projectTask.status);\n          break;\n      }\n    });\n    return { toDoItems, inProgressItems, doneItems };\n  };\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport { Link } from \"react-router-dom\";\n\nimport Button from \"react-bootstrap/Button\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Backlog from \"./Backlog\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      errors: {},\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { projectTasks } = this.props.backlog;\n\n    // algo to show cards deck dyncamically\n    const { errors } = this.state;\n    let boardContent;\n\n    const boardAlgorithm = this.boardAlgorithm();\n\n    boardContent = boardAlgorithm(errors, projectTasks);\n\n    return (\n      <Container fluid className=\"justify-content-md-center\">\n        <br />\n        <Link to={`/addProjectTask/${id}`} className=\"mb-3\">\n          <Button variant=\"light\" size=\"lg\" className=\"float-left\">\n            <FontAwesomeIcon icon=\"plus-square\" /> Create Project Task\n          </Button>\n        </Link>\n        <br />\n        <hr />\n        {boardContent}\n      </Container>\n    );\n  }\n\n  boardAlgorithm() {\n    return (errors, projectTasks) => {\n      if (projectTasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog projectTasksProp={projectTasks} />;\n      }\n    };\n  }\n}\n\nProjectBoard.propTypes = {\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  backlog: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\n\nimport classnames from \"classnames\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      priority: 0,\n      status: \"\",\n      dueDate: \"\",\n      projectIdentifier: id, //the path variable will become project identifier\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange = (event) => {\n    // this meants get the target name property and set it to the value property\n    // then setState\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmit = (event) => {\n    // prevents screen refresh once this event ends\n    event.preventDefault();\n    const newProjectTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      priority: this.state.priority,\n      projectIdentifier: this.state.projectIdentifier,\n      dueDate: this.state.dueDate,\n      status: this.state.status,\n    };\n\n    // call the post method\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newProjectTask,\n      this.props.history\n    );\n\n    //log for test\n    console.debug(newProjectTask);\n  };\n\n  // Life Cycle Hooks\n  // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\n  // https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html (migration)\n\n  static getDerivedStateFromProps = (nextProps, state) => {\n    if (nextProps.errors) {\n      state.errors = nextProps.errors;\n    }\n\n    return state;\n  };\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n\n    return (\n      <Container fluid className=\"p-2 flex-fill justify-content-center\">\n        <div className=\"col-md-8 m-auto\">\n          <Link to={`/projectBoard/${id}`} className=\"mb-3\">\n            <Button variant=\"dark\" className=\"float-left\" size=\"sm\">\n              <FontAwesomeIcon icon=\"backward\" /> Back to Project Board\n            </Button>\n          </Link>\n          <br />\n          <hr />\n          <h4 className=\"display-4 text-center\">Add Project Task</h4>\n          <p className=\"lead text-center\">Project Name + Project Code</p>\n          <Form onSubmit={this.onSubmit} className=\"d-flex-fill p-1 text-left\">\n            <Form.Label>Project Task Summary</Form.Label>\n            <Form.Group>\n              <Form.Control\n                as=\"input\"\n                name=\"summary\"\n                className={classnames({\n                  \"is-invalid\": errors.summary,\n                })}\n                placeholder=\"Project Task summary\"\n                value={this.state.summary}\n                onChange={this.onChange}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.summary}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Acceptance Criteria</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                name=\"acceptanceCriteria\"\n                placeholder=\"Acceptance Criteria\"\n                value={this.state.acceptanceCriteria}\n                onChange={this.onChange}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Due Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"dueDate\"\n                value={this.state.dueDate}\n                onChange={this.onChange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Priority</Form.Label>\n              <Form.Control\n                as=\"select\"\n                custom\n                name=\"priority\"\n                required\n                value={this.state.priority}\n                onChange={this.onChange}\n              >\n                <option value={0}>Select Priority</option>\n                <option value={1}>High</option>\n                <option value={2}>Medium</option>\n                <option value={3}>Low</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Status</Form.Label>\n              <Form.Control\n                as=\"select\"\n                custom\n                name=\"status\"\n                value={this.state.status}\n                onChange={this.onChange}\n              >\n                <option value=\"\">Select Status</option>\n                <option value=\"TO_DO\">TO DO</option>\n                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                <option value=\"DONE\">DONE</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" block>\n              Submit\n            </Button>\n          </Form>\n        </div>\n      </Container>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Form from \"react-bootstrap/Form\";\n\nimport classnames from \"classnames\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogActions\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      createdAt: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlogId, projectTaskId } = this.props.match.params;\n    this.props.getProjectTask(backlogId, projectTaskId, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      createdAt,\n    } = nextProps.projectTask;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      createdAt,\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updatedProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      createdAt: this.state.createdAt,\n    };\n\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      updatedProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <Container fluid className=\"p-2 flex-fill justify-content-center\">\n        <div className=\"col-md-8 m-auto\">\n          <Link\n            to={`/projectBoard/${this.state.projectIdentifier}`}\n            className=\"mb-3\"\n          >\n            <Button variant=\"dark\" className=\"float-left\" size=\"sm\">\n              <FontAwesomeIcon icon=\"backward\" /> Back to Project Board\n            </Button>\n          </Link>\n          <br />\n          <hr />\n          <h4 className=\"display-4 text-center\">Update Project Task</h4>\n          <p className=\"lead text-center\">\n            Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n            {this.state.projectSequence}{\" \"}\n          </p>\n          <Form onSubmit={this.onSubmit} className=\"d-flex-fill p-1 text-left\">\n            <Form.Label>Project Task Summary</Form.Label>\n            <Form.Group>\n              <Form.Control\n                as=\"input\"\n                name=\"summary\"\n                className={classnames({\n                  \"is-invalid\": errors.summary,\n                })}\n                placeholder=\"Project Task summary\"\n                value={this.state.summary}\n                onChange={this.onChange}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.summary}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Acceptance Criteria</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                name=\"acceptanceCriteria\"\n                placeholder=\"Acceptance Criteria\"\n                value={this.state.acceptanceCriteria}\n                onChange={this.onChange}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Due Date</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"dueDate\"\n                value={this.state.dueDate}\n                onChange={this.onChange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Priority</Form.Label>\n              <Form.Control\n                as=\"select\"\n                custom\n                name=\"priority\"\n                required\n                value={this.state.priority}\n                onChange={this.onChange}\n              >\n                <option value={0}>Select Priority</option>\n                <option value={1}>High</option>\n                <option value={2}>Medium</option>\n                <option value={3}>Low</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Status</Form.Label>\n              <Form.Control\n                as=\"select\"\n                custom\n                name=\"status\"\n                value={this.state.status}\n                onChange={this.onChange}\n              >\n                <option value=\"\">Select Status</option>\n                <option value=\"TO_DO\">TO DO</option>\n                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                <option value=\"DONE\">DONE</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" block>\n              Submit\n            </Button>\n          </Form>\n        </div>\n      </Container>\n    );\n  }\n}\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  projectTask: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  projectTask: state.backlog.projectTask,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport { Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <Container>\n            <Row>\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </Row>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { connect } from \"react-redux\";\n\nimport { authenticateUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\n\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    // componentdidmount stuff is basically this place in contructor\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  // Life Cycle Hooks\n  // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\n  // https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html (migration)\n\n  componentWillReceiveProps = (nextProps) => {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    return null;\n  };\n\n  componentDidMount() {}\n\n  //\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmit = (event) => {\n    // prevents screen refresh once this event ends\n    event.preventDefault();\n    const loginUser = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n\n    this.props.authenticateUser(loginUser, this.props.history);\n\n    //log for test\n    console.log(loginUser);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <Container>\n          <div className=\"col-md-8 m-auto\">\n            <h1 className=\"display-4 text-center\">Log In</h1>\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup className=\"d-flex-fill p-1 text-left\">\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Email Address (Username)\"\n                  name=\"username\"\n                  required\n                  className={classnames({\n                    \"is-invalid\": errors.username,\n                  })}\n                  value={this.state.username}\n                  onChange={this.onChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.username}\n                </Form.Control.Feedback>\n              </FormGroup>\n              <FormGroup className=\"d-flex-fill p-1 text-left\">\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  required\n                  className={classnames({\n                    \"is-invalid\": errors.password,\n                  })}\n                  value={this.state.password}\n                  onChange={this.onChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.password}\n                </Form.Control.Feedback>\n              </FormGroup>\n              <Button type=\"submit\" variant=\"info\" className=\"mt-4\" block>\n                Submit\n              </Button>\n            </Form>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  authenticateUser: PropTypes.func.isRequired,\n\n  security: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { authenticateUser })(Login);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Button from \"react-bootstrap/Button\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n\n      // add errors to extract on form\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    //component did mount stuff\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  // Life Cycle Hooks\n  // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\n  // https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html (migration)\n\n  static getDerivedStateFromProps = (nextProps, state) => {\n    if (nextProps.errors) {\n      state.errors = nextProps.errors;\n    }\n\n    return state;\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmit = (event) => {\n    // prevents screen refresh once this event ends\n    event.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n\n    //log for test\n    console.log(newUser);\n  };\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <Container>\n          <div className=\"col-md-8 m-auto\">\n            <h1 className=\"display-4 text-center\">Sign Up</h1>\n            <p className=\"lead text-center\">Create your Account</p>\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup className=\"d-flex-fill p-1 text-left\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Full Name\"\n                  name=\"fullName\"\n                  size=\"lg\"\n                  required\n                  className={classnames({\n                    \"is-invalid\": errors.username,\n                  })}\n                  value={this.state.fullName}\n                  onChange={this.onChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.fullName}\n                </Form.Control.Feedback>\n              </FormGroup>\n              <Form.Group\n                className=\"d-flex-fill p-1 text-left\"\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter email (Username)\"\n                  name=\"username\"\n                  size=\"lg\"\n                  required\n                  className={classnames({\n                    \"is-invalid\": errors.username,\n                  })}\n                  value={this.state.username}\n                  onChange={this.onChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n                </Form.Text>\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.username}\n                </Form.Control.Feedback>\n              </Form.Group>\n              <FormGroup>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  size=\"lg\"\n                  required\n                  className={classnames({\n                    \"is-invalid\": errors.password,\n                  })}\n                  value={this.state.password}\n                  onChange={this.onChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.password}\n                </Form.Control.Feedback>\n              </FormGroup>\n              <FormGroup>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                  size=\"lg\"\n                  required\n                  className={classnames({\n                    \"is-invalid\": errors.confirmPassword,\n                  })}\n                  value={this.state.confirmPassword}\n                  onChange={this.onChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.confirmPassword}\n                </Form.Control.Feedback>\n              </FormGroup>\n              <Button type=\"submit\" variant=\"info\" className=\"mt-4\" block>\n                Submit\n              </Button>\n            </Form>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React from \"react\";\n\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({\n  component: Component /*react type */,\n  security /* our auth info */,\n  ...otherProps\n}) => {\n  return (\n    <Route  {...otherProps} \n            render = { (props) =>  security.validToken === true ? \n                                ( <Component {...props} /> ) \n                              : ( <Redirect to=\"/login\" /> )\n                      }\n    />\n  );\n};\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/layout/Header\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faCheckSquare,\n  faCoffee,\n  faEdit,\n  faBackward,\n  faTasks,\n  faPlusSquare,\n  faMinusSquare,\n  faUserCircle,\n  faProjectDiagram,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/project/AddProject\";\n\nimport { Provider } from \"react-redux\";\nimport appStore from \"./store/store\";\nimport UpdateProject from \"./components/project/UpdateProject\";\nimport NotFoundPage from \"./components/not-found/NotFoundPage\";\nimport ProjectBoard from \"./components/project-board/ProjectBoard\";\nimport AddProjectTask from \"./components/project-board/project-task/AddProjectTask\";\nimport UpdateProjectTask from \"./components/project-board/project-task/UpdateProjectTask\";\nimport Landing from \"./components/layout/Landing\";\nimport Login from \"./components/user-management/Login\";\nimport Register from \"./components/user-management/Register\";\n\nimport store from \"./store/store\";\nimport jwt_decode from \"jwt-decode\";\nimport SetJWTToken from \"./security-untils/SetJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\n\nimport moment from \"moment\";\nimport SecuredRoute from \"./security-untils/SecuredRoute\";\n\n//font awesome icons available globally for this project\nlibrary.add(\n  faCheckSquare,\n  faCoffee,\n  faEdit,\n  faMinusSquare,\n  faPlusSquare,\n  faBackward,\n  faTasks,\n  faUserCircle,\n  faProjectDiagram\n);\n\n/**\n * Usually when you reload a browser the redux state is cleaned\n * we still have the token in local stoarge - so lets use it\n */\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  SetJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken,\n  });\n\n  const currentTime = moment().unix();\n  // exp is expiration time\n  if (decoded_jwtToken.exp < currentTime) {\n    console.log(\"JWT Token expired - logging out...\");\n\n    //handle logout\n    store.dispatch(logout());\n\n    //redirect to\n    window.location.href = \"/\";\n  }\n}\n\n/**\n * Main App class\n */\nfunction App() {\n  return (\n    <Provider store={appStore}>\n      {\n        //provide actualy connects react with redux and we are providing it a store\n      }\n      <Router>\n        <div className=\"App\">\n          {\n            //<h1>Welcome to Saurabh's First React App</h1>\n          }\n          <Header />\n          <Switch>\n            {\n              //public routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            {\n              //private routes\n            }\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path=\"/updateProjectTask/:backlogId/:projectTaskId\"\n              component={UpdateProjectTask}\n            />\n            <Route path=\"*\" component={NotFoundPage} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/PageNotFound.e659b517.png\";"],"sourceRoot":""}