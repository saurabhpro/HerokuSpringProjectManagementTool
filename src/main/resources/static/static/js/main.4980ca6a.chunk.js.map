{"version":3,"sources":["security-untils/SetJWTToken.js","actions/securityActions.js","actions/types.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store/store.js","security-untils/SecuredRoute.js","actions/projectActions.js","components/project/ProjectItem.js","components/project/CreateProjectButton.js","components/Dashboard.js","components/layout/Header.js","components/project/AddProject.js","components/project/UpdateProject.js","components/not-found/NotFoundPage.js","components/project-board/project-task/ProjectTask.js","actions/backlogActions.js","components/project-board/Backlog.js","components/project-board/ProjectBoard.js","components/project-board/project-task/AddProjectTask.js","components/project-board/project-task/UpdateProjectTask.js","components/layout/Landing.js","components/user-management/Login.js","components/user-management/Register.js","App.js","serviceWorker.js","index.js","assets/images/PageNotFound.png"],"names":["SetJWTToken","token","axios","defaults","headers","common","logout","dispatch","console","log","localStorage","removeItem","type","payload","initialState","projects","project","projectTasks","projectTask","validToken","user","booleanActionPayload","combineReducers","errors","state","action","filter","projectIdentifier","backlog","projectSequence","security","middleware","thunk","appStore","window","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","connect","Component","component","otherProps","render","props","to","createProject","history","a","post","serverResponse","debug","push","error","response","data","ProjectItem","onDeleteClick","id","deleteProject","this","Container","className","Card","Row","Col","lg","projectName","description","border","ButtonGroup","vertical","Button","variant","block","icon","onClick","bind","confirm","delete","CreateProjectButton","Fragment","size","Dashboard","getProjects","fluid","map","proj","key","get","Header","location","href","HeaderLink","userIsAuthenticated","Navbar","Collapse","Nav","Link","Form","inline","FormControl","placeholder","Text","fullName","userIsNotAuthenticated","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","AddProject","onChange","event","setState","target","name","value","onSubmit","preventDefault","newProject","startDate","endDate","Group","controlId","Label","Control","as","required","classnames","Feedback","getDerivedStateFromProps","nextProps","UpdateProject","match","params","getProject","disabled","NotFoundPage","src","PageNotFound","alt","style","textAlign","ProjectTask","getPriorityColorAndStringValue","priorityAsString","priorityColorClass","priority","backlogId","projectTaskId","deleteProjectTask","createdAt","moment","format","text","Body","Title","summary","acceptanceCriteria","Backlog","distributeToCardDecks","projectTasksProp","tasks","toDoItems","inProgressItems","doneItems","forEach","task","status","CardDeck","md","offset","ProjectBoard","getBacklog","boardContent","boardAlgorithm","length","projectNotFound","role","AddProjectTask","newProjectTask","dueDate","addProjectTask","custom","UpdateProjectTask","getProjectTask","e","updatedProjectTask","updateProjectTask","patch","Landing","Login","componentWillReceiveProps","loginUser","username","password","authenticateUser","xl","FormGroup","setItem","decoded","jwt_decode","Register","newUser","confirmPassword","createNewUser","library","add","faCheckSquare","faCoffee","faEdit","faMinusSquare","faPlusSquare","faBackward","faTasks","faUserCircle","faProjectDiagram","jwtToken","decoded_jwtToken","currentTime","unix","exp","App","store","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.4980ca6a.chunk.js","sourcesContent":["import axios from \"axios\";\n\n/**\n *\n * @param {token} token to be appended to any request that requires it\n */\nconst SetJWTToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default SetJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\n\nimport SetJWTToken from \"../security-untils/SetJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\n//const baseURL = \"http://localhost:8080\";\n\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  try {\n    const serverResponse = await axios.post(\"/api/users/register\", newUser);\n    console.log(serverResponse);\n\n    // redirect to login after successful creation of user\n    history.push(\"/login\");\n\n    // clear out errors form previous calls\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const authenticateUser = (loginUser, history) => async (dispatch) => {\n  try {\n    // post Login request\n    const serverResponse = await axios.post(\"/api/users/login\", loginUser);\n    console.log(serverResponse);\n\n    // extract the token from response data\n    const { token } = serverResponse.data;\n\n    //store the token in localStorage\n    localStorage.setItem(\"jwtToken\", token);\n\n    // set our token in header ***\n    SetJWTToken(token);\n\n    //decode token on react\n    const decoded = jwt_decode(token);\n\n    //dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  console.log(\"logging out now\");\n\n  //remove from local storage of browser\n  localStorage.removeItem(\"jwtToken\");\n\n  //get rid of the token\n  SetJWTToken(false);\n\n  // dont send any payload user\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {},\n  });\n};\n","// type of action we want to perform\n\n// reducer action - first reducer\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n// backlog\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\n//user security\nexport const SET_CURRENT_USER  = \"SET_CURRENT_USER\";","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\n// function to return the payload for our action type\nexport default function (state = initialState, action) {\n  if (action.type === GET_ERRORS) {\n    return action.payload;\n  } else {\n    return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state, // spread operator\n        projects: action.payload,\n      };\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"../actions/types\";\n\nconst initialState = {\n  projectTasks: [],\n  projectTask: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        projectTasks: action.payload,\n      };\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        projectTask: action.payload,\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        projectTasks: state.projectTasks.filter(\n          (projectTask) => projectTask.projectSequence !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {},\n};\n\n/**\n *\n * @param {payload} payload which contains JWT Claims (user info)\n */\nconst booleanActionPayload = (payload) => {\n  return !!payload; //  true if has value (the !! makes sure we return boolean and not the payload content)\n};\n\nexport default function (state = initialState, action) {\n  if (action.type === SET_CURRENT_USER) {\n    return {\n      ...state,\n      validToken: booleanActionPayload(action.payload),\n      user: action.payload,\n    };\n  } else {\n    return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\n/** errorReducer is the method we created */\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet appStore;\n\n/*\n this is simply creating the store \n and additionally for Chrome if we have redux debug tool extension installed we use the compose methdo to expose the store data\n https://github.com/zalmoxisus/redux-devtools-extension\n*/\nif (window.navigator.userAgent.includes(\"Chrome\")) {\n  appStore = createStore(\n    rootReducer, // our combinedReducer\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      /* preloadedState, */ window.__REDUX_DEVTOOLS_EXTENSION__\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\n        : (f) => f\n    )\n  );\n} else {\n  appStore = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default appStore;\n","import React from \"react\";\n\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({\n  component: Component /*react type */,\n  security /* our auth info */,\n  ...otherProps\n}) => {\n  return (\n    <Route  {...otherProps} \n            render = { (props) =>  security.validToken === true ? \n                                ( <Component {...props} /> ) \n                              : ( <Redirect to=\"/login\" /> )\n                      }\n    />\n  );\n};\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\nexport default connect(mapStateToProps)(SecuredRoute);\n","import axios from \"axios\";\n\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\n//const baseURL = \"http://localhost:8080\";\n\n/**\n * history -> helps redirect once form is submitted\n * aysnc returns a promise, await waits for the promis to get done\n * thunk allows us to have a function returns dispatch function\n * */\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    const serverResponse = await axios.post(\"/api/projects\", project);\n    console.debug(serverResponse);\n\n    //redirect to this route with props set (visible in redux debug tool)\n    history.push(\"/dashboard\");\n\n    //clear out any previous errors from state\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (error) {\n    console.error(error);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const getProjects = () => async (dispatch) => {\n  const serverResponse = await axios.get(\"/api/projects\");\n  console.debug(serverResponse);\n\n  dispatch({\n    type: GET_PROJECTS,\n    payload: serverResponse.data,\n  });\n};\n\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const serverResponse = await axios.get(`/api/projects/${id}`);\n    console.debug(serverResponse);\n\n    dispatch({\n      type: GET_PROJECT,\n      payload: serverResponse.data,\n    });\n  } catch (error) {\n    history.push(\"/error\");\n  }\n};\n\nexport const deleteProject = (id, history) => async (dispatch) => {\n  if (window.confirm(\"Are you sure you want to delete?\")) {\n    await axios.delete(`/api/projects/${id}`);\n\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\n\n// get our fontawesome imports\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { deleteProject } from \"../../actions/projectActions\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <Container className=\"mb-4\">\n        <Card>\n          <Row className=\"bg-dark text-left\">\n            <Col className=\"text-light  ml-4\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={8} className=\"text-left ml-4\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </Col>\n\n            <Card border=\"light\" className=\"ml-5 justify-content-center\">\n              <ButtonGroup vertical>\n                <Link\n                  to={`/projectBoard/${project.projectIdentifier}`}\n                  className=\"btn-block\"\n                >\n                  <Button variant=\"outline-primary\" block className=\"mb-1\">\n                    <div className=\"float-left\">\n                      <FontAwesomeIcon icon=\"tasks\" /> Project Board\n                    </div>\n                  </Button>\n                </Link>\n\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <Button variant=\"outline-success\" block className=\"mb-1\">\n                    <div className=\"float-left\">\n                      <FontAwesomeIcon icon=\"edit\" /> Update Project Info\n                    </div>\n                  </Button>\n                </Link>\n\n                <Button\n                  className=\"text-left\"\n                  variant=\"outline-danger\"\n                  block\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <FontAwesomeIcon icon=\"minus-square\" /> Delete Project\n                </Button>\n              </ButtonGroup>\n            </Card>\n          </Row>\n        </Card>\n      </Container>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React from \"react\";\n\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\">\n        <Button size=\"lg\" variant=\"info\" className=\"ml-2\">\n          <FontAwesomeIcon icon=\"plus-square\" /> Create a Project\n        </Button>\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./project/ProjectItem\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nimport CreateProjectButton from \"./project/CreateProjectButton\";\n\n/**\n * The main component which allows the Projects to be visible once the token is validated\n */\nclass Dashboard extends Component {\n  // Life Cycle Hooks\n  // https://reactjs.org/docs/react-component.html#componentdidmount\n  // is invoked immediately after a component is mounted (inserted into the tree).\n  // Initialization that requires DOM nodes should go here.\n  // If you need to load data from a remote endpoint, this is a good place to instantiate the network request.\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    // const projectList = this.props.project.projects;\n    const { projects } = this.props.project; // destructuring requires exact matchinh property\n\n    return (\n      <Container fluid=\"sm\" className=\"p-4 flex-fill justify-content-center\">\n        <Row className=\"justify-content-md-center\">\n          <h1 className=\"display-4 ml-2\"> Projects</h1>\n        </Row>\n        <br />\n        <Row className=\"justify-content-md-center\">\n          <CreateProjectButton />\n        </Row>\n        <hr />\n        <Row>\n          {\n            //this prop name is same as the child extracted name\n            projects.map((proj) => (\n              <ProjectItem key={proj.id} project={proj} />\n            ))\n          }\n        </Row>\n      </Container>\n    );\n  }\n}\n\n// typescript type validation\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\n// BootStrap\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\n// FontAwesome imports\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n/**\n * class to get the nice looking banner at the top\n * - this also contains dynamic buttons based on when a user is logged in\n */\nclass Header extends Component {\n  logout = () => {\n    this.props.logout();\n    window.location.href = \"/\";\n  };\n\n  render() {\n    // get important info from security (token) user\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/dashboard\" className=\"text-light\">\n            Dashboard\n          </Nav.Link>\n        </Nav>\n\n        <Nav>\n          <Form inline>\n            <FormControl\n              type=\"text\"\n              placeholder=\"Search Project\"\n              className=\"mr-sm-1 justify-content-end\"\n            />\n            <Button variant=\"outline-light mr-2\"> Search </Button>\n          </Form>\n        </Nav>\n\n        <Nav>\n          {\" \"}\n          <Navbar.Text className=\"text-light\">\n            <FontAwesomeIcon icon=\"user-circle\" /> {user.fullName}\n          </Navbar.Text>\n          <Nav.Link onClick={this.logout.bind(this)} className=\"text-light\">\n            Logout\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    );\n\n    const userIsNotAuthenticated = (\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <Nav.Link href=\"/register\" className=\"text-light\">\n            Sign Up\n          </Nav.Link>\n          <Nav.Link href=\"/login\" className=\"text-light\">\n            Login\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    );\n\n    let HeaderLink;\n\n    if (user && validToken) {\n      HeaderLink = userIsAuthenticated;\n    } else {\n      HeaderLink = userIsNotAuthenticated;\n    }\n\n    return (\n      <div>\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\n          <Navbar.Brand href=\"/\">\n            <FontAwesomeIcon icon=\"project-diagram\" /> First React Task Manager\n          </Navbar.Brand>\n\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\n          {HeaderLink}\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport classnames from \"classnames\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport { Row, Col } from \"react-bootstrap\";\n\n/**\n * the create new project form with all validations\n */\nclass AddProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      // add errors to extract on form\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // Life Cycle Hooks\n  // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\n  // https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html (migration)\n\n  static getDerivedStateFromProps = (nextProps, state) => {\n    if (nextProps.errors) {\n      state.errors = nextProps.errors;\n    }\n\n    return state;\n  };\n\n  onChange = (event) => {\n    // this meants get the target name property and set it to the value property\n    // then setState\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmit = (event) => {\n    // prevents screen refresh once this event ends\n    event.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n    };\n\n    this.props.createProject(newProject, this.props.history);\n\n    //log for test\n    console.log(newProject);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <Container fluid className=\"p-2 flex-fill justify-content-center\">\n        <Row className=\"justify-content-md-center\">\n          <h5 className=\"display-4 \">Create Project form</h5>\n        </Row>\n        <hr />\n        <Row className=\"justify-content-md-center\">\n          {\" \"}\n          <Col lg={6}>\n            {\n              // for with onSubmit Action - this.onSubmit can have any arbitary name too like onSave etc\n            }\n            <Form\n              onSubmit={this.onSubmit}\n              className=\"d-flex-fill p-1 text-left\"\n            >\n              <Form.Group controlId=\"formProjectName\">\n                <Form.Label>Project Name</Form.Label>\n                <Form.Control\n                  as=\"input\"\n                  required\n                  placeholder=\"Project Name\"\n                  name=\"projectName\"\n                  className={classnames({\n                    \"is-invalid\": errors.projectName,\n                  })}\n                  value={this.state.projectName}\n                  onChange={this.onChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.projectName}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"formProjectIdentifier\">\n                <Form.Label>Project Unique Identifier</Form.Label>\n                <Form.Control\n                  as=\"input\"\n                  required\n                  //disabled\n                  placeholder=\"Project Unique Identifier\"\n                  name=\"projectIdentifier\"\n                  className={classnames({\n                    \"is-invalid\": errors.projectIdentifier,\n                  })}\n                  value={this.state.projectIdentifier}\n                  onChange={this.onChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.projectIdentifier}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"formProjectDescription\">\n                <Form.Label>Project Description</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  required\n                  placeholder=\"Project Description\"\n                  name=\"description\"\n                  className={classnames({\n                    \"is-invalid\": errors.description,\n                  })}\n                  value={this.state.description}\n                  onChange={this.onChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.description}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"formStartDate\">\n                <Form.Label>Start Date</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  name=\"startDate\"\n                  value={this.state.startDate}\n                  onChange={this.onChange}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formEndDate\">\n                <Form.Label>Estimated End Date</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  name=\"endDate\"\n                  value={this.state.endDate}\n                  onChange={this.onChange}\n                />\n              </Form.Group>\n              \n              <Button type=\"submit\" block>\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n/**\n * https://reactjs.org/docs/typechecking-with-proptypes.html\n * Simple means it can checl what argument type we have (since we are using js not ts it might be handy)\n * React has some built-in typechecking abilities. To run typechecking on the props for a component, you can assign the special propTypes property\n * More: https://blog.bitsrc.io/understanding-react-proptypes-type-checking-in-react-9648a62ce12e\n * PropTypes.func.isRequired = The prop must be a function and it must be provided else error will be thrown.\n */\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\n// https://blog.logrocket.com/react-redux-connect-when-and-how-to-use-it-f2a1edab2013/\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import React, { Component } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { getProject, createProject } from \"../../actions/projectActions\";\n\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\n\nclass UpdateProject extends Component {\n  // to make it controlled componenet we create a constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      startDate: \"\",\n      endDate: \"\",\n\n      //error handling\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  // Life Cycle Hooks\n  // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\n  // https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html (migration)\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate,\n    } = nextProps.project;\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate,\n    });\n  }\n\n  // Called immediately after a component is mounted. Setting state here will trigger re-rendering.\n  componentDidMount() {\n    // destructuring\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(event) {\n    // this meants get the target name property and set it to the value property\n    // then setState\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  onSubmit = (event) => {\n    // prevents screen refresh once this event ends\n    event.preventDefault();\n\n    const newProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n    };\n\n    this.props.createProject(newProject, this.props.history);\n\n    //log for test\n    console.log(newProject);\n  };\n\n  render() {\n    const {\n      errors,\n      projectName,\n      projectIdentifier,\n      description,\n      startDate,\n      endDate,\n    } = this.state;\n\n    return (\n      <Container fluid className=\"p-2 flex-fill justify-content-center\">\n        <Row className=\"justify-content-md-center\">\n          <h5 className=\"display-4 \">Update Project Form</h5>\n        </Row>\n        <hr />\n\n        <Row className=\"justify-content-md-center\">\n          {\" \"}\n          <Col lg={6}>\n            {\n              // for with onSubmit Action - this.onSubmit can have any arbitary name too like onSave etc\n            }\n            <Form onSubmit={this.onSubmit} className=\"p-1 text-left\">\n              <Form.Group controlId=\"formProjectName\">\n                <Form.Label>Project Name</Form.Label>\n                <Form.Control\n                  as=\"input\"\n                  required\n                  placeholder=\"Project Name\"\n                  name=\"projectName\"\n                  className={classnames({\n                    \"is-invalid\": errors.projectName,\n                  })}\n                  value={projectName}\n                  onChange={this.onChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.projectName}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"formProjectIdentifier\">\n                <Form.Label>Project Unique Identifier</Form.Label>\n                <Form.Control\n                  as=\"input\"\n                  required\n                  disabled\n                  placeholder=\"Project Unique Identifier\"\n                  name=\"projectIdentifier\"\n                  value={projectIdentifier}\n                  onChange={this.onChange}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formProjectDescription\">\n                <Form.Label>Project Description</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  required\n                  placeholder=\"Project Description\"\n                  name=\"description\"\n                  className={classnames({\n                    \"is-invalid\": errors.description,\n                  })}\n                  value={description}\n                  onChange={this.onChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.description}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group controlId=\"formStartDate\">\n                <Form.Label>Start Date</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  name=\"startDate\"\n                  value={startDate}\n                  onChange={this.onChange}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formEndDate\">\n                <Form.Label>Estimated End Date</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  name=\"endDate\"\n                  value={endDate}\n                  onChange={this.onChange}\n                />\n              </Form.Group>\n\n              <Button type=\"submit\" block>\n                Update\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\n//https://react-redux.js.org/using-react-redux/connect-mapstate\nconst mapStateToProps = (state) => ({\n  // define the variable to be used\n  project: state.project.project,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import React, { Component } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport PageNotFound from \"../../assets/images/PageNotFound.png\";\n\nclass NotFoundPage extends Component {\n  render() {\n    return (\n      <div>\n        <img src={PageNotFound} alt=\"Page not Found\" />\n        <p style={{ textAlign: \"center\" }}>\n          <Link to=\"/\">Go to Home </Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default NotFoundPage;\n","import React, { Component } from \"react\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlogId, projectTaskId) {\n    this.props.deleteProjectTask(backlogId, projectTaskId);\n  }\n\n  render() {\n    const { projectTask } = this.props;\n    //using moment.js\n    const createdAt = moment(projectTask).format(\"MMMM Do YYYY\");\n\n    // using dynamic colorization and convert to String value\n    let {\n      priorityColorClass,\n      priorityAsString,\n    } = this.getPriorityColorAndStringValue(projectTask);\n\n    return (\n      <div className=\"row-sm-3\">\n        <Card text=\"dark\" className=\"mb-2 mh-20\">\n          <Card.Header className={`${priorityColorClass}`}>\n            ID: {projectTask.projectSequence} | Priority: {priorityAsString}\n          </Card.Header>\n          <Card.Body>\n            <Card.Title>{projectTask.summary}</Card.Title>\n            <Card.Text className=\"text-truncate\">\n              {projectTask.acceptanceCriteria}\n            </Card.Text>\n\n            <ButtonGroup>\n              {\" \"}\n              <Link\n                to={`/updateProjectTask/${projectTask.projectIdentifier}/${projectTask.projectSequence}`}\n              >\n                <Button variant=\"primary\" className=\"mr-2\">\n                  <FontAwesomeIcon icon=\"edit\" /> View / Update\n                </Button>\n              </Link>\n              <Button\n                variant=\"danger\"\n                onClick={this.onDeleteClick.bind(\n                  this,\n                  projectTask.projectIdentifier,\n                  projectTask.projectSequence\n                )}\n              >\n                <FontAwesomeIcon icon=\"minus-square\" /> Delete\n              </Button>\n            </ButtonGroup>\n          </Card.Body>\n          <Card.Text>\n            <small className=\"text-muted\">Created on {createdAt}</small>\n          </Card.Text>\n        </Card>\n      </div>\n    );\n  }\n\n  getPriorityColorAndStringValue = (projectTask) => {\n    let priorityAsString;\n    let priorityColorClass;\n    switch (projectTask.priority) {\n      case 1:\n        priorityAsString = \"HIGH\";\n        priorityColorClass = \"bg-danger text-light\";\n        break;\n      case 2:\n        priorityAsString = \"MEDIUM\";\n        priorityColorClass = \"bg-primary text-light\";\n        break;\n      case 3:\n        priorityAsString = \"LOW\";\n        priorityColorClass = \"bg-secondary text-light\";\n        break;\n      default:\n        break;\n    }\n    return { priorityColorClass, priorityAsString };\n  };\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\n\nimport {\n  GET_ERRORS,\n  GET_PROJECT_TASK,\n  GET_BACKLOG,\n  DELETE_PROJECT_TASK,\n} from \"./types\";\n\n//const baseURL = \"http://localhost:8080\";\n\nexport const addProjectTask = (backlogId, projectTask, history) => async (\n  dispatch\n) => {\n  try {\n    const serverResponse = await axios.post(\n      `/api/projects/${backlogId}/backlog`,\n      projectTask\n    );\n\n    history.push(`/projectBoard/${backlogId}`);\n    console.debug(serverResponse);\n\n    //clear out any previous errors from state\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (error) {\n    console.error(error);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\n// multiple project tasks\nexport const getBacklog = (backlogId) => async (dispatch) => {\n  try {\n    const serverResponse = await axios.get(\n      `/api/projects/${backlogId}/backlog/`\n    );\n    console.debug(serverResponse);\n\n    dispatch({\n      type: GET_BACKLOG,\n      payload: serverResponse.data,\n    });\n  } catch (error) {\n    console.error(error);\n    dispatch({\n      type: GET_ERRORS,\n      payload: error.response.data,\n    });\n  }\n};\n\nexport const getProjectTask = (backlogId, projectTaskId, history) => async (\n  dispatch\n) => {\n  try {\n    const serverResponse = await axios.get(\n      `/api/backlogs/${backlogId}/tasks/${projectTaskId}`\n    );\n    console.debug(serverResponse);\n\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: serverResponse.data,\n    });\n  } catch (error) {\n    console.error(error);\n    history.push(\"/error\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlogId,\n  projectTaskId,\n  projectTask,\n  history\n) => async (dispatch) => {\n  try {\n    await axios.patch(\n      `/api/backlogs/${backlogId}/tasks/${projectTaskId}`,\n      projectTask\n    );\n\n    history.push(`/projectBoard/${backlogId}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlogId, projectTaskId) => async (\n  dispatch\n) => {\n  if (\n    window.confirm(\n      `You are deleting project task ${projectTaskId}, this action cannot be undone?`\n    )\n  ) {\n    await axios.delete(`/api/backlogs/${backlogId}/tasks/${projectTaskId}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: projectTaskId,\n    });\n  }\n};\n","import React, { Component } from \"react\";\n\nimport Card from \"react-bootstrap/Card\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\n\nimport ProjectTask from \"../project-board/project-task/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    //must have the same name as passed property in ProjectBoard\n    const { projectTasksProp } = this.props;\n\n    // group tasks into three decks\n    let { toDoItems, inProgressItems, doneItems } = this.distributeToCardDecks(\n      projectTasksProp\n    );\n\n    const styles1 = {\n      margin: '20px',\n      width: '250px',\n      height: '250px',\n      backgroundColor: 'yellow',\n      display: 'inline-block',\n    };\n\n    return (\n      \n      <CardDeck>\n        <Card bg=\"dark\" text=\"white\" className=\"text-center p-2 \">\n          <Card.Header as=\"h5\" className=\"mb-2\">\n            TO DO\n          </Card.Header>\n          {toDoItems}\n        </Card>\n\n        <Card\n          md={{ offset: 1 }}\n          bg=\"warning\"\n          text=\"light\"\n          className=\"text-center p-2 card-transparent\"\n          \n        >\n          <Card.Header as=\"h5\" className=\"mb-2\">\n            In Progress\n          </Card.Header>\n          {inProgressItems}\n        </Card>\n\n        <Card bg=\"success\" text=\"light\" className=\"text-center p-2  card-transparent\">\n          <Card.Header as=\"h5\" className=\"mb-2\">\n            Done\n          </Card.Header>\n          {doneItems}\n        </Card>\n      </CardDeck>\n    );\n  }\n\n  distributeToCardDecks = (projectTasksProp) => {\n    // now prepare and embeddeble object\n    const tasks = projectTasksProp.map((projectTask) => (\n      <ProjectTask key={projectTask.id} projectTask={projectTask} />\n    ));\n\n    let toDoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    tasks.forEach((task) => {\n      switch (task.props.projectTask.status) {\n        case \"TO_DO\":\n          toDoItems.push(task);\n          break;\n        case \"IN_PROGRESS\":\n          inProgressItems.push(task);\n          break;\n        case \"DONE\":\n          doneItems.push(task);\n          break;\n        default:\n          console.error(\"Unknown Card Deck : \" + task.props.projectTask.status);\n          break;\n      }\n    });\n    return { toDoItems, inProgressItems, doneItems };\n  };\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Backlog from \"./Backlog\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      errors: {},\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { projectTasks } = this.props.backlog;\n\n    // algo to show cards deck dyncamically\n    const { errors } = this.state;\n    let boardContent;\n\n    const boardAlgorithm = this.boardAlgorithm();\n\n    boardContent = boardAlgorithm(errors, projectTasks);\n\n    return (\n      <Container fluid className=\"justify-content-md-center\">\n        <br />\n        <Link to={`/addProjectTask/${id}`} className=\"mb-3\">\n          <Button variant=\"light\" size=\"lg\" className=\"float-left\">\n            <FontAwesomeIcon icon=\"plus-square\" /> Create Project Task\n          </Button>\n        </Link>\n        <br />\n        <hr />\n        {boardContent}\n      </Container>\n    );\n  }\n\n  boardAlgorithm() {\n    return (errors, projectTasks) => {\n      if (projectTasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog projectTasksProp={projectTasks} />;\n      }\n    };\n  }\n}\n\nProjectBoard.propTypes = {\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  backlog: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { Link } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\n\nimport classnames from \"classnames\";\nimport { Row, Col } from \"react-bootstrap\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      priority: 0,\n      status: \"\",\n      dueDate: \"\",\n      projectIdentifier: id, //the path variable will become project identifier\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange = (event) => {\n    // this meants get the target name property and set it to the value property\n    // then setState\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmit = (event) => {\n    // prevents screen refresh once this event ends\n    event.preventDefault();\n    const newProjectTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      priority: this.state.priority,\n      projectIdentifier: this.state.projectIdentifier,\n      dueDate: this.state.dueDate,\n      status: this.state.status,\n    };\n\n    // call the post method\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newProjectTask,\n      this.props.history\n    );\n\n    //log for test\n    console.debug(newProjectTask);\n  };\n\n  // Life Cycle Hooks\n  // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\n  // https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html (migration)\n\n  static getDerivedStateFromProps = (nextProps, state) => {\n    if (nextProps.errors) {\n      state.errors = nextProps.errors;\n    }\n\n    return state;\n  };\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n\n    return (\n      <Container fluid className=\"flex-fill justify-content-center\">\n        <Row className=\"justify-content-md-left\">\n          <Link to={`/projectBoard/${id}`}>\n            <Button variant=\"dark\" className=\"float-left\" size=\"sm\">\n              <FontAwesomeIcon icon=\"backward\" /> Back to Project Board\n            </Button>\n          </Link>\n        </Row>\n\n        <Row className=\"justify-content-md-center\">\n          <h4 className=\"display-4\">Add Project Task</h4>\n        </Row>\n\n        <Row className=\"justify-content-md-center\">\n          <Col lg={6}>\n            <Form\n              onSubmit={this.onSubmit}\n              className=\"d-flex-fill p-1 text-left\"\n            >\n              <Form.Label>Project Task Summary</Form.Label>\n              <Form.Group>\n                <Form.Control\n                  as=\"input\"\n                  name=\"summary\"\n                  className={classnames({\n                    \"is-invalid\": errors.summary,\n                  })}\n                  placeholder=\"Project Task summary\"\n                  value={this.state.summary}\n                  onChange={this.onChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.summary}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Acceptance Criteria</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  name=\"acceptanceCriteria\"\n                  placeholder=\"Acceptance Criteria\"\n                  value={this.state.acceptanceCriteria}\n                  onChange={this.onChange}\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Due Date</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  name=\"dueDate\"\n                  value={this.state.dueDate}\n                  onChange={this.onChange}\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Priority</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  custom\n                  name=\"priority\"\n                  required\n                  value={this.state.priority}\n                  onChange={this.onChange}\n                >\n                  <option value={0}>Select Priority</option>\n                  <option value={1}>High</option>\n                  <option value={2}>Medium</option>\n                  <option value={3}>Low</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Status</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  custom\n                  name=\"status\"\n                  value={this.state.status}\n                  onChange={this.onChange}\n                >\n                  <option value=\"\">Select Status</option>\n                  <option value=\"TO_DO\">TO DO</option>\n                  <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                  <option value=\"DONE\">DONE</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Button type=\"submit\" block>\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nimport classnames from \"classnames\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogActions\";\nimport { Row, Col } from \"react-bootstrap\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      createdAt: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlogId, projectTaskId } = this.props.match.params;\n    this.props.getProjectTask(backlogId, projectTaskId, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      createdAt,\n    } = nextProps.projectTask;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      createdAt,\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updatedProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      createdAt: this.state.createdAt,\n    };\n\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      updatedProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <Container fluid className=\"flex-fill justify-content-center\">\n        <Row className=\"justify-content-md-left\">\n          <Link\n            to={`/projectBoard/${this.state.projectIdentifier}`}\n            className=\"mb-3\"\n          >\n            <Button variant=\"dark\" className=\"float-left\" size=\"sm\">\n              <FontAwesomeIcon icon=\"backward\" /> Back to Project Board\n            </Button>\n          </Link>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <h4 className=\"display-4\">Update Project Task</h4>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <p className=\"lead\">\n            Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n            {this.state.projectSequence}{\" \"}\n          </p>\n        </Row>\n\n        <Row className=\"justify-content-md-center\">\n          <Col lg={6}>\n            <Form\n              onSubmit={this.onSubmit}\n              className=\"d-flex-fill p-1 text-left\"\n            >\n              <Form.Label>Project Task Summary</Form.Label>\n              <Form.Group>\n                <Form.Control\n                  as=\"input\"\n                  name=\"summary\"\n                  className={classnames({\n                    \"is-invalid\": errors.summary,\n                  })}\n                  placeholder=\"Project Task summary\"\n                  value={this.state.summary}\n                  onChange={this.onChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.summary}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Acceptance Criteria</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  name=\"acceptanceCriteria\"\n                  placeholder=\"Acceptance Criteria\"\n                  value={this.state.acceptanceCriteria}\n                  onChange={this.onChange}\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Due Date</Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  name=\"dueDate\"\n                  value={this.state.dueDate}\n                  onChange={this.onChange}\n                />\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Priority</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  custom\n                  name=\"priority\"\n                  required\n                  value={this.state.priority}\n                  onChange={this.onChange}\n                >\n                  <option value={0}>Select Priority</option>\n                  <option value={1}>High</option>\n                  <option value={2}>Medium</option>\n                  <option value={3}>Low</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label>Status</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  custom\n                  name=\"status\"\n                  value={this.state.status}\n                  onChange={this.onChange}\n                >\n                  <option value=\"\">Select Status</option>\n                  <option value=\"TO_DO\">TO DO</option>\n                  <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                  <option value=\"DONE\">DONE</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Button type=\"submit\" block>\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  projectTask: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  projectTask: state.backlog.projectTask,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n// bootstrap\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\n/**\n * The default page we first come when an unauthenticated user reches \n * - can be prettified as it shows two unnecesary button SignUp and Login\n */\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <Container>\n            <Row>\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                  Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                  Login\n                </Link>\n              </div>\n            </Row>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\n\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Row, Col } from \"react-bootstrap\";\n\nimport classnames from \"classnames\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { authenticateUser } from \"../../actions/securityActions\";\n\n/**\n * Simple login page component\n */\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    // componentDidMount stuff is basically this place in constructor\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  // Life Cycle Hooks\n  // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\n  // https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html (migration)\n\n  componentWillReceiveProps = (nextProps) => {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    return null;\n  };\n\n  componentDidMount() {}\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmit = (event) => {\n    // prevents screen refresh once this event ends\n    event.preventDefault();\n    const loginUser = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n\n    this.props.authenticateUser(loginUser, this.props.history);\n\n    //log for test\n    console.log(loginUser);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <Container fluid=\"md\">\n        <Row className=\"justify-content-md-center\">\n          <h1 className=\"display-4 text-center\">Log In</h1>\n        </Row>\n\n        <Row xl className=\"justify-content-md-center\">\n          <Col lg={6}>\n          \n            <Form onSubmit={this.onSubmit}>\n              <FormGroup className=\"p-1 text-left\">\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Email Address (Username)\"\n                  name=\"username\"\n                  required\n                  className={classnames({\n                    \"is-invalid\": errors.username,\n                  })}\n                  size=\"lg\"\n                  value={this.state.username}\n                  onChange={this.onChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.username}\n                </Form.Control.Feedback>\n              </FormGroup>\n\n              <FormGroup className=\"p-1 text-left\">\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  required\n                  className={classnames({\n                    \"is-invalid\": errors.password,\n                  })}\n                  size=\"lg\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.password}\n                </Form.Control.Feedback>\n              </FormGroup>\n\n              <Button type=\"submit\" variant=\"info\" className=\"mt-4\" block>\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nLogin.propTypes = {\n  authenticateUser: PropTypes.func.isRequired,\n\n  security: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { authenticateUser })(Login);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport { Row, Col } from \"react-bootstrap\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n\n      // add errors to extract on form\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    //component did mount stuff\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  // Life Cycle Hooks\n  // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\n  // https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html (migration)\n\n  static getDerivedStateFromProps = (nextProps, state) => {\n    if (nextProps.errors) {\n      state.errors = nextProps.errors;\n    }\n\n    return state;\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSubmit = (event) => {\n    // prevents screen refresh once this event ends\n    event.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n\n    //log for test\n    console.log(newUser);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <Container fluid=\"md\">\n        <Row lg className=\"justify-content-md-center\">\n          <h1 className=\"display-4 text-center\">Sign Up</h1>\n        </Row>\n        <Row lg className=\"justify-content-md-center\">\n          <p className=\"lead text-center\">Create your Account</p>\n        </Row>\n\n        <Row className=\"justify-content-md-center\">\n          <Col lg={6}>\n          \n            <Form onSubmit={this.onSubmit}>\n              <FormGroup className=\"p-1\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Full Name\"\n                  name=\"fullName\"\n                  size=\"lg\"\n                  required\n                  className={classnames({\n                    \"is-invalid\": errors.username,\n                  })}\n                  value={this.state.fullName}\n                  onChange={this.onChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.fullName}\n                </Form.Control.Feedback>\n              </FormGroup>\n\n              <Form.Group\n                className=\"p-1 text-left\"\n                controlId=\"formBasicEmail\"\n              >\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Email Address (Username)\"\n                  name=\"username\"\n                  size=\"lg\"\n                  required\n                  className={classnames({\n                    \"is-invalid\": errors.username,\n                  })}\n                  value={this.state.username}\n                  onChange={this.onChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n                </Form.Text>\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.username}\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <FormGroup className=\"p-1\">\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  size=\"lg\"\n                  required\n                  className={classnames({\n                    \"is-invalid\": errors.password,\n                  })}\n                  value={this.state.password}\n                  onChange={this.onChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.password}\n                </Form.Control.Feedback>\n              </FormGroup>\n\n              <FormGroup className=\"p-1\">\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  name=\"confirmPassword\"\n                  size=\"lg\"\n                  required\n                  className={classnames({\n                    \"is-invalid\": errors.confirmPassword,\n                  })}\n                  value={this.state.confirmPassword}\n                  onChange={this.onChange}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.confirmPassword}\n                </Form.Control.Feedback>\n              </FormGroup>\n\n              <Button type=\"submit\" variant=\"info\" className=\"mt-4\" block>\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n/**\n * Router - component wraps our main application routing and has Route as its child\n * Route - components, which will point to all other URLs\n * Switch - exectly one path can be taken by route matchers {@see https://medium.com/@jenniferdobak/react-router-vs-switch-components-2af3a9fc72e}\n * */\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n/** *\n * Provider - This makes the Redux store available to any nested components that have been wrapped in the connect() function.\n *            Since any React component in a React Redux app can be connected,\n * most applications will render a <Provider> at the top level, with the entire app’s component tree inside of it.\n */\nimport { Provider } from \"react-redux\";\n\n//custom impls for store and jwt\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport appStore from \"./store/store\";\nimport jwt_decode from \"jwt-decode\";\nimport SetJWTToken from \"./security-untils/SetJWTToken\";\nimport SecuredRoute from \"./security-untils/SecuredRoute\";\n\n/**\n *  moment.js for out date time needs\n * */\nimport moment from \"moment\";\n\n/**\n * Custom object we created and exported\n * */\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/layout/Header\";\nimport AddProject from \"./components/project/AddProject\";\nimport UpdateProject from \"./components/project/UpdateProject\";\nimport NotFoundPage from \"./components/not-found/NotFoundPage\";\nimport ProjectBoard from \"./components/project-board/ProjectBoard\";\nimport AddProjectTask from \"./components/project-board/project-task/AddProjectTask\";\nimport UpdateProjectTask from \"./components/project-board/project-task/UpdateProjectTask\";\nimport Landing from \"./components/layout/Landing\";\nimport Login from \"./components/user-management/Login\";\nimport Register from \"./components/user-management/Register\";\n\n/**\n * Libraries For Fontawesome\n * */\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faCheckSquare,\n  faCoffee,\n  faEdit,\n  faBackward,\n  faTasks,\n  faPlusSquare,\n  faMinusSquare,\n  faUserCircle,\n  faProjectDiagram,\n} from \"@fortawesome/free-solid-svg-icons\";\n\n//font awesome icons available globally for this project\nlibrary.add(\n  faCheckSquare,\n  faCoffee,\n  faEdit,\n  faMinusSquare,\n  faPlusSquare,\n  faBackward,\n  faTasks,\n  faUserCircle,\n  faProjectDiagram\n);\n\n/**\n * Usually when you reload a browser the redux state is cleaned\n * we still have the token in local stoarge - so lets use it\n */\nconst jwtToken = localStorage.jwtToken;\nconsole.log(\"JWT Token - \" + jwtToken);\nif (jwtToken) {\n  SetJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  console.log(\"User- \" + decoded_jwtToken);\n\n  appStore.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken,\n  });\n\n  const currentTime = moment().unix();\n  // exp is expiration time\n  if (decoded_jwtToken.exp < currentTime) {\n    console.log(\"JWT Token expired - logging out...\");\n\n    //handle logout\n    appStore.dispatch(logout());\n\n    //redirect to\n    window.location.href = \"/\";\n  }\n}\n\n/**\n * Main App class\n */\nfunction App() {\n  return (\n    <Provider store={appStore}>\n      {\n        //provide actualy connects react with redux and we are providing it a store\n      }\n      <Router>\n        <div className=\"App\">\n          {\n            //<h1>Welcome to Saurabh's First React App</h1>\n          }\n          <Header />\n          <Switch>\n            {\n              //public routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            {\n              //private routes\n            }\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path=\"/updateProjectTask/:backlogId/:projectTaskId\"\n              component={UpdateProjectTask}\n            />\n            <Route path=\"*\" component={NotFoundPage} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/PageNotFound.e659b517.png\";"],"sourceRoot":""}